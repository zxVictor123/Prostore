For the code present, we get this error:
```
不能将类型“(credentials: Partial<Record<"email" | "password", unknown>>) => Promise<{ id: string; name: string; email: string | null; role: string; } | null | undefined>”
分配给类型“(credentials: Partial<Record<"email" | "password", unknown>>, request: Request) => Awaitable<User | null>”。
  不能将类型“Promise<{ id: string; name: string; email: string | null; role: string; } | null | undefined>”
  分配给类型“Awaitable<User | null>”。
    不能将类型“Promise<{ id: string; name: string; email: string | null; role: string; } | null | undefined>”
    分配给类型“PromiseLike<User | null>”。
      属性“then”的类型不兼容。
        不能将类型“<TResult1 = { id: string; name: string; email: string | null; role: string; } | null | undefined, TResult2 = never>(onfulfilled?: ((value: { id: string; name: string; email: string | null; role: string; } | null | undefined) => TResult1 | PromiseLike<...>) | null | undefined, onrejected?: ((reason: any) => TResult2 ...”
        分配给类型“<TResult1 = User | null, TResult2 = never>(onfulfilled?: ((value: User | null) => TResult1 | PromiseLike<TResult1>) | null | undefined, onrejected?: ((reason: any) => TResult2 | PromiseLike<...>) | null | undefined) => PromiseLike<...>”。
          参数“onfulfilled”和“onfulfilled” 的类型不兼容。
            参数“value”和“value” 的类型不兼容。
              不能将类型“{ id: string; name: string; email: string | null; role: string; } | null | undefined”
              分配给类型“User | null”。
                不能将类型“undefined”
                分配给类型“User | null”。
```
How can I resolve this? If you propose a fix, please make it concise.